{"ast":null,"code":"var _jsxFileName = \"/Users/travisjohnprol/Desktop/Mod4/todo/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { CATEGORIES } from \"./data\";\nimport TaskContainer from \"./Containers/TaskContainer\";\nimport CategoryContainer from \"./Containers/CategoryContainer\";\nimport Home from \"./Components/Home\";\nimport NavBar from \"./Components/NavBar\";\nimport TaskForm from \"./Components/TaskForm\";\nimport CompletedTaskContainer from './Containers/CompletedTaskContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      completedTasks: [],\n      category: \"All\"\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:4000/api/v1/tasks\").then(r => r.json()).then(tasks => this.setState({\n        tasks: tasks\n      }));\n    };\n\n    this.categoryClick = e => {\n      this.setState({\n        category: e.target.value\n      });\n    };\n\n    this.addTask = newTask => {\n      console.log(\"Adding to State in App:\", newTask);\n      this.setState({\n        tasks: [...this.state.tasks, newTask]\n      });\n    };\n\n    this.deleteTask = id => {\n      // fetch(`http://localhost:4000/api/v1/tasks/${id}`, {\n      //   method: \"DELETE\",\n      // })\n      // this.filterTasks(id)\n      console.log(id);\n    };\n\n    this.filterTasks = id => {\n      let int = parseInt(id);\n      let array = this.state.tasks;\n      let filteredTasks = array.filter(task => task.id !== int);\n      this.setState({\n        tasks: filteredTasks\n      });\n    };\n\n    this.completeTask = id => {\n      let int = parseInt(id);\n      let task = this.state.tasks.find(task => task.id === int);\n      this.setState({\n        completedTasks: [...this.state.completedTasks, task]\n      });\n      let array = this.state.tasks;\n      let filteredTasks = array.filter(task => task.id !== int);\n      this.setState({\n        tasks: filteredTasks\n      }); // fetch(`http://localhost:4000/api/v1/tasks/${id}`, {\n      //   method: \"DELETE\",\n      // })\n      // this.filterTasks(id)\n      // fetch('http://localhost:4000/api/v1/completeds', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     Accept: 'application/json'\n      //   },\n      //   body: JSON.stringify({\n      //     task: {\n      //       text: this.state.completedTasks, \n      //       category: this.state.category\n      //     }\n      //   })\n      // })\n      //   .then(r => r.json())\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryContainer, {\n          categories: CATEGORIES,\n          clickHandler: this.categoryClick,\n          category: this.state.category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(TaskContainer, {\n          tasks: this.state.tasks,\n          category: this.state.category,\n          newTask: this.addTask,\n          deleteTask: this.deleteTask,\n          completeTask: this.completeTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/completed-tasks\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryContainer, {\n          categories: CATEGORIES,\n          clickHandler: this.categoryClick,\n          category: this.state.category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(CompletedTaskContainer, {\n          tasks: this.state.completedTasks,\n          category: this.state.category,\n          newTask: this.addTask,\n          deleteTask: this.deleteTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/new-task\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(TaskForm, {\n          addTask: this.addTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 22\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/travisjohnprol/Desktop/Mod4/todo/src/App.js"],"names":["React","BrowserRouter","Router","Route","CATEGORIES","TaskContainer","CategoryContainer","Home","NavBar","TaskForm","CompletedTaskContainer","App","Component","state","tasks","completedTasks","category","componentDidMount","fetch","then","r","json","setState","categoryClick","e","target","value","addTask","newTask","console","log","deleteTask","id","filterTasks","int","parseInt","array","filteredTasks","filter","task","completeTask","find","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport \"./App.css\"\nimport { CATEGORIES } from \"./data\"\nimport TaskContainer from \"./Containers/TaskContainer\"\nimport CategoryContainer from \"./Containers/CategoryContainer\"\nimport Home from \"./Components/Home\"\nimport NavBar from \"./Components/NavBar\"\nimport TaskForm from \"./Components/TaskForm\"\nimport CompletedTaskContainer from './Containers/CompletedTaskContainer'\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    completedTasks: [],\n    category: \"All\",\n  }\n\n  componentDidMount = () => {\n    fetch(\"http://localhost:4000/api/v1/tasks\")\n      .then((r) => r.json())\n      .then((tasks) =>\n        this.setState({\n          tasks: tasks,\n        })\n      )\n  }\n\n  categoryClick = (e) => {\n    this.setState({ category: e.target.value })\n  }\n\n  addTask = (newTask) => {\n    console.log(\"Adding to State in App:\", newTask)\n    this.setState({ tasks: [...this.state.tasks, newTask] })\n  }\n\n  deleteTask = (id) => {\n    // fetch(`http://localhost:4000/api/v1/tasks/${id}`, {\n    //   method: \"DELETE\",\n    // })\n    // this.filterTasks(id)\nconsole.log(id)\n  }\n\n  filterTasks = (id) => {\n    let int = parseInt(id)\n    let array = this.state.tasks\n    let filteredTasks = array.filter((task) => task.id !== int)\n    this.setState({tasks: filteredTasks})\n  }\n\n  completeTask = (id) => {\n    let int = parseInt(id)\n    let task = this.state.tasks.find((task) => task.id === int)\n    this.setState({completedTasks: [...this.state.completedTasks, task]})\n    let array = this.state.tasks\n    let filteredTasks = array.filter((task) => task.id !== int)\n    this.setState({tasks: filteredTasks})\n\n    // fetch(`http://localhost:4000/api/v1/tasks/${id}`, {\n    //   method: \"DELETE\",\n    // })\n    // this.filterTasks(id)\n\n    // fetch('http://localhost:4000/api/v1/completeds', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Accept: 'application/json'\n    //   },\n    //   body: JSON.stringify({\n    //     task: {\n    //       text: this.state.completedTasks, \n    //       category: this.state.category\n    //     }\n    //   })\n    // })\n    //   .then(r => r.json())\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            path=\"/tasks\"\n            render={() => {\n              return (\n                <>\n                  <CategoryContainer\n                    categories={CATEGORIES}\n                    clickHandler={this.categoryClick}\n                    category={this.state.category}\n                  />\n\n                  <TaskContainer\n                    tasks={this.state.tasks}\n                    category={this.state.category}\n                    newTask={this.addTask}\n                    deleteTask={this.deleteTask}\n                    completeTask={this.completeTask}\n                  />\n                </>\n              )\n            }}\n          />\n          <Route\n            path=\"/completed-tasks\"\n            render={() => {\n              return (\n                <>\n                  <CategoryContainer\n                    categories={CATEGORIES}\n                    clickHandler={this.categoryClick}\n                    category={this.state.category}\n                  />\n\n                  <CompletedTaskContainer\n                    tasks={this.state.completedTasks}\n                    category={this.state.category}\n                    newTask={this.addTask}\n                    deleteTask={this.deleteTask}\n                  />\n                </>\n              )\n            }}\n          />\n          <Route\n            path=\"/new-task\"\n            render={() => {\n              return <TaskForm addTask={this.addTask} />\n            }}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}